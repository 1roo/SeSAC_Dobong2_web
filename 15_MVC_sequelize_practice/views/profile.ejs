<!DOCTYPE html>
<html lang="ko">
  <%- include('include/include', { title: '회원 정보' })%>
  <body>
    <h1>회원 정보</h1>
    <!-- TODO: href 속성값 설정하기 -->
    <a href="/user">HOME</a>
    <p>ID 수정 불가능, Password, Name 수정 가능</p>

    <!-- TODO: 각 input의 value 값을 로그인 한 사람의 정보로 채우기 -->
    <form name="form_profile">
      <label for="userid">ID</label>
      <input type="hidden" id="id" value="<%= id %>" />
      <!-- readonly: userid는 수정 불가능 (조건임) -->
      <input
        id="userid"
        type="text"
        name="userid"
        value="<%= userid %>"
        readonly /><br />
      <label for="password">Password</label>
      <input
        id="password"
        type="password"
        name="pw"
        value="<%= pw %>"
        required /><br />
      <label for="name">Name</label>
      <input
        id="name"
        type="text"
        name="name"
        value="<%= name %>"
        required /><br />
      <button type="button" onclick="profileEdit();">Edit</button>
      <button type="button" onclick="profileDelete();">Delete</button>
    </form>

<script>
  // TODO: [Login] 버튼 클릭시 서버에 회원 정보 수정 요청하기
  // POST /user/profile/edit
  function profileEdit() {
        const form = document.forms["form_profile"];
        const data = {
          userid: form.userid.value,
          pw: form.pw.value,
          name: form.name.value,
        };
        axios
          .patch("/user/profile/edit", data)
          .then((res) => {
            if (res.data.success) {
              alert("프로필이 수정되었습니다.");
              location.reload();
            } else {
              alert("수정에 실패했습니다.");
            }
          })
          .catch((err) => {
            console.error(err);
            alert("오류가 발생했습니다.");
          });
      }
  // TODO: [Login] 버튼 클릭시 서버에 회원 정보 삭제 요청하기
  // POST /user/profile/delete
  function profileDelete() {
    const form = document.forms["form_profile"];
    const userid = form.userid.value;

    if (confirm("정말로 계정을 삭제하시겠습니까?")) {
      axios
        .delete("/user/profile/delete", {
          data: { userid }, // 데이터는 data 속성에 전달
          headers: { "Content-Type": "application/json" }, // 명시적으로 JSON 헤더 설정
        })
        .then((res) => {
          if (res.data.success) {
            alert("계정이 삭제되었습니다.");
            window.location.href = "/user";
          } else {
            alert("삭제에 실패했습니다.");
          }
        })
        .catch((err) => {
          console.error("삭제 요청 중 오류 발생:", err);
          alert("오류가 발생했습니다.");
        });
    }
  }
</script>
  </body>
</html>
