<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>chatting: [no DM, no Nickname]</title>
    <!-- socket.io CDN -->
    <script src="/socket.io/socket.io.js"></script>

    <!-- bootstrap CSS CDN -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous" />

    <style>
      #chat-container {
        width: 400px;
        margin: 20px auto;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 10px;
      }

      #chat-box {
        display: flex;
        flex-direction: column;
        height: 300px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
      }

      .message {
        max-width: 70%;
        padding: 8px 12px;
        border-radius: 10px;
        margin: 5px;
      }

      .sent {
        background-color: #007bff;
        color: white;
        align-self: flex-end;
      }

      .received {
        background-color: #f1f1f1;
        color: black;
        align-self: flex-start;
      }

      #chat {
        width: 100%;
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
      }

      #message {
        width: 310px;
        padding: 5px;
        margin-right: 10px;
        border: 1px solid gray;
        border-radius: 15px;
      }

      button {
        padding: 0 5px;
        border: none;
        border-radius: 15px;
      }
    </style>
  </head>
  <body>
    <div id="chat-container">
      <div id="notice-box"></div>
      <div id="chat-box"></div>
      <form id="chat">
        <input type="text" id="message" placeholder="채팅 작성" />
        <button>보내기</button>
      </form>
    </div>

    <script>
      const socket = io();
      let mySocketId = null;

      socket.on("connect", () => {
        mySocketId = socket.id;
      });

      const chattingRoom = prompt("채팅방을 입력해주세요");
      const chat = document.querySelector("#chat");
      const chatBox = document.querySelector("#chat-box");

      socket.emit("join", chattingRoom);

      socket.on("userjoin", (notice) => {
        const noticeBox = document.querySelector("#notice-box");
        const noticeElement = document.createElement("p");
        noticeElement.textContent = notice;
        noticeBox.append(noticeElement);
      });

      chat.addEventListener("submit", (e) => {
        e.preventDefault();
        const msgInput = document.querySelector("#message");
        const message = msgInput.value.trim();
        if (message) {
          socket.emit("message", message);
          msgInput.value = "";
        }
      });

      socket.on("message_to_all", (message, id) => {
        const className = id === mySocketId ? "sent" : "received";
        addMessage(message, className, id);
      });

      function addMessage(text, className, id) {
        const p = document.createElement("p");
        p.classList.add("message", className);
        className === "received"
          ? (p.textContent = `${id}: ${text}`)
          : (p.textContent = text);
        chatBox.append(p);
        chatBox.scrollTop = chatBox.scrollHeight;
      }
    </script>
  </body>
</html>
